{
  "permissions": {
    "allow": [
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(mkdir:*)",
      "Bash(npm run dev:*)",
      "Bash(find:*)",
      "Bash(awk:*)",
      "Bash(npm run build:*)",
      "Bash(git merge:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(curl:*)",
      "Bash(cat:*)",
      "Bash(pkill:*)",
      "Bash(cloc:*)",
      "Bash(git mv:*)",
      "Bash(node:*)",
      "Bash(npx ts-node --esm -e \"import(''./src/simulation/config/KiteGeometry'').then(m => console.log(''Masse:'', m.KiteGeometry.TOTAL_MASS, ''kg''))\")",
      "Bash(npm install)",
      "mcp__ide__getDiagnostics",
      "Bash(timeout 10 npm run dev)",
      "Bash(npm run type-check:*)",
      "Bash(tree:*)",
      "Bash(npm run lint:*)",
      "Bash(git log:*)",
      "Bash(git clone:*)",
      "Bash(git config:*)",
      "Bash(git restore:*)",
      "Bash(rm:*)",
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(mv:*)",
      "Bash(unzip:*)",
      "Bash(dir /s /b src*.ts)",
      "Bash(findstr /I \"physics constraint pbd rope line aero verlet\")",
      "Bash(timeout 5 sleep 5)",
      "Bash(powershell -Command \"Start-Sleep -Seconds 3\")",
      "Bash(bash download_nasa_content.sh)",
      "Bash(bash download_nasa_images.sh)",
      "Bash(npx cloc src --by-file --json)",
      "Bash(timeout 30 npm run build)",
      "Bash(copy \"c:\\code\\Kite_V5\\kite_v5\\src\\ecs\\systems\\ConstraintSystem.ts\" \"c:\\code\\Kite_V5\\kite_v5\\src\\ecs\\systems\\ConstraintSystem.ts.backup\")"
    ],
    "deny": [],
    "ask": []
  },
  "outputStyle": "default"
}
